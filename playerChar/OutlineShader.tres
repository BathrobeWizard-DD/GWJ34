[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform bool outline_enabled;
uniform vec4 outline_color: hint_color;

void fragment()
{
	vec4 sprite_color = texture(TEXTURE, UV);
	if (outline_enabled)
	{
		float size = 1.0 * TEXTURE_PIXEL_SIZE.x;
	
		float alpha = -4.0 * sprite_color.a;
		alpha += texture(TEXTURE, UV + vec2(size, 0.0)).a;
		alpha += texture(TEXTURE, UV + vec2(-size, 0.0)).a;
		alpha += texture(TEXTURE, UV + vec2(0.0, size)).a;
		alpha += texture(TEXTURE, UV + vec2(0.0, -size)).a;
		
		vec4 final_color = mix(sprite_color, outline_color, clamp(alpha, 0.0, 1.0));
		COLOR = vec4(final_color.rgb, clamp(abs(alpha) + sprite_color.a, 0.0, 1.0));
	}
	else
	{
		COLOR = sprite_color;
	}
}"

[resource]
shader = SubResource( 1 )
shader_param/outline_enabled = false
shader_param/outline_color = Color( 1, 1, 1, 1 )
